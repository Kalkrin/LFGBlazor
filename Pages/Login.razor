@page "/login"
@using Microsoft.AspNetCore.WebUtilities
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavManager
@inject AuthService AuthService


<div class="container">
    <h3>Login</h3>
    <div class="text-danger"><span>@errorMessage</span></div>
    <EditForm Model="user" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="username">Username</label>
            <InputText class="form-control" id="username" @bind-Value="user.Username" />
            <ValidationMessage For="@(() => user.Username)" />
            
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText class="form-control" id="password" @bind-Value="user.Password" type="password" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <br>
        <button type="submit" class="btn btn-primary">Login</button>
        <button @onclick="Register" class="btn btn-success">Register</button>
    </EditForm>
</div>


@code {
    private string errorMessage = string.Empty;

    private string returnUrl = string.Empty;
    private UserLoginDto user = new UserLoginDto();
    ServiceResponse<string> result = new ServiceResponse<string>();

    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }
    async Task HandleLogin()
    {
        result = await AuthService.Login(user);
        if(result.Success)
        {
            await LocalStorage.SetItemAsync("token", result.Data);
            await AuthStateProvider.GetAuthenticationStateAsync();
            NavManager.NavigateTo(returnUrl);
        }
        else
        {
            errorMessage = result.Message;
        }
    }

    void Register()
    {
        NavManager.NavigateTo("register");
    }

}